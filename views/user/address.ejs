<!DOCTYPE HTML>
<html>
<head>
    <title>CRUX | Manage Addresses</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/front/css/style.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f9fa;
        }
        
        .profile-container {
            padding-top: 2rem;
            padding-bottom: 4rem;
        }
        
        /* Sidebar Styling */
        .profile-sidebar {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            height: 100%;
        }
        
        .profile-header {
            background: linear-gradient(135deg, #6366F1 0%, #8B5CF6 100%);
            padding: 2rem 1.5rem;
            color: white;
            text-align: center;
        }
        
        .profile-image {
            position: relative;
            display: inline-block;
        }
        
        .profile-image img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            border: 4px solid rgba(255, 255, 255, 0.2);
            object-fit: cover;
        }
        
        .nav-menu {
            padding: 1rem 0;
        }
        
        .nav-menu .nav-item {
            padding: 0;
        }
        
        .nav-menu .nav-link {
            padding: 0.75rem 1.5rem;
            color: #4B5563;
            display: flex;
            align-items: center;
            transition: all 0.2s;
            border-left: 3px solid transparent;
        }
        
        .nav-menu .nav-link i {
            margin-right: 12px;
            font-size: 1.2rem;
            width: 24px;
            text-align: center;
        }
        
        .nav-menu .nav-link:hover {
            background-color: #F3F4F6;
            color: #6366F1;
        }
        
        .nav-menu .nav-link.active {
            background-color: #F3F4F6;
            color: #6366F1;
            border-left: 3px solid #6366F1;
            font-weight: 500;
        }
        
        /* Content Cards */
        .content-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .content-card h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: #111827;
            margin-bottom: 1.5rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid #E5E7EB;
        }
        
        /* Address Cards */
        .address-card {
            border: 1px solid #E5E7EB;
            border-radius: 8px;
            padding: 1.25rem;
            margin-bottom: 1rem;
            position: relative;
            transition: all 0.2s;
            height: 100%;
        }
        
        .address-card:hover {
            border-color: #6366F1;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        .address-card .badge {
            position: absolute;
            top: 1.25rem;
            right: 1.25rem;
            font-size: 0.75rem;
            padding: 0.35rem 0.75rem;
            border-radius: 9999px;
        }
        
        .address-card .badge-default {
            background-color: #10B981;
            color: white;
        }
        
        .address-card h5 {
            font-weight: 600;
            margin-bottom: 0.5rem;
            padding-right: 4rem;
        }
        
        .address-card p {
            color: #6B7280;
            margin-bottom: 0.5rem;
        }
        
        .address-card .address-actions {
            margin-top: 1rem;
            display: flex;
            gap: 0.5rem;
        }
        
        .address-card .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        
        /* Form Styling */
        .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid #D1D5DB;
        }
        
        .form-control:focus {
            border-color: #6366F1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.15);
        }
        
        .btn-primary {
            background-color: #6366F1;
            border-color: #6366F1;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .btn-primary:hover {
            background-color: #4F46E5;
            border-color: #4F46E5;
        }
        
        .btn-outline-primary {
            color: #6366F1;
            border-color: #6366F1;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .btn-outline-primary:hover {
            background-color: #6366F1;
            color: white;
        }
        
        .btn-outline-danger {
            color: #EF4444;
            border-color: #EF4444;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .btn-outline-danger:hover {
            background-color: #EF4444;
            color: white;
        }
        
        /* Modal Styling */
        .modal-content {
            border-radius: 12px;
            border: none;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .modal-header {
            border-bottom: 1px solid #E5E7EB;
            padding: 1.25rem 1.5rem;
        }
        
        .modal-header .modal-title {
            font-weight: 600;
        }
        
        .modal-body {
            padding: 1.5rem;
        }
        
        .modal-footer {
            border-top: 1px solid #E5E7EB;
            padding: 1.25rem 1.5rem;
        }
        
        .error-message {
            color: #EF4444;
            font-size: 0.8rem;
            margin-top: 0.25rem;
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .profile-sidebar {
                margin-bottom: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <%- include('./userPartials/header') %> 

    <div class="container profile-container">
        <% if (messages.success) { %>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i> <%= messages.success %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>
        
        <% if (messages.error) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i> <%= messages.error %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>

        <div class="row">
            <!-- Sidebar -->
            <div class="col-lg-3 col-md-4">
                <div class="profile-sidebar">
                    <div class="profile-header">
                        <div class="profile-image">
                            <img src="<%= user.image %>" alt="<%= user.fullName %>" class="img-fluid">
                        </div>
                        <h4 class="mt-3 mb-1"><%= user.fullName %></h4>
                        <p class="mb-0"><%= user.email %></p>
                    </div>
                    
                    <ul class="nav flex-column nav-menu">
                        <li class="nav-item">
                            <a class="nav-link" href="/profile">
                                <i class="fas fa-user"></i> Account Overview
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/my-orders">
                                <i class="fas fa-shopping-bag"></i> My Orders
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/profile/addresses">
                                <i class="fas fa-map-marker-alt"></i> Manage Addresses
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/wallet">
                                <i class="fas fa-wallet"></i> Wallet
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/coupons">
                                <i class="fas fa-ticket-alt"></i> Coupons
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/wishlist">
                                <i class="fas fa-heart"></i> Wishlist
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-danger" href="/logout">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            
            <!-- Profile Content -->
            <div class="col-lg-9 col-md-8">
                <div class="content-card">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="mb-0">
                            <i class="fas fa-map-marker-alt me-2"></i>
                            Saved Addresses
                        </h2>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                            <i class="fas fa-plus me-2"></i> Add New Address
                        </button>
                    </div>
                    
                    <div class="addresses-container">
                        <% if (addresses && addresses.length > 0) { %>
                            <div class="row">
                                <% addresses.forEach(address => { %>
                                    <div class="col-md-6 mb-3">
                                        <div class="address-card">
                                            <% if (address.isDefault) { %>
                                                <span class="badge badge-default">Default</span>
                                            <% } %>
                                            
                                            <h5><%= address.address_type || 'Address' %></h5>
                                            <p>
                                                <%= address.name %><br>
                                                <%= address.hName || '' %><br>
                                                <%= address.street %><br>
                                                <%= address.city %>, <%= address.state %> <%= address.pin || address.zipCode %><br>
                                                <i class="fas fa-phone-alt me-2"></i><%= address.mobile_number || address.phone %>
                                            </p>
                                            
                                            <div class="address-actions">
                                                <a href="/profile/addresses/<%=address._id%>"><button class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-edit me-1"></i> Edit
                                                </button></a>
                                                
                                                <% if (!address.isDefault) { %>
                                                    <button class="btn btn-sm btn-outline-primary defaultAddress" data-id="<%= address._id %>">
                                                        <i class="fas fa-check-circle me-1"></i> Set as Default
                                                    </button>
                                                    
                                                    <button class="btn btn-sm btn-outline-danger deleteAddress" data-id="<%= address._id %>">
                                                        <i class="fas fa-trash-alt me-1"></i> Delete
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>                                   
                                    
                                <% }); %>
                            </div>
                        <% } else { %>
                            <div class="text-center py-5">
                                <i class="fas fa-map-marker-alt fa-4x text-muted mb-3"></i>
                                <h4>No Addresses Found</h4>
                                <p class="text-muted">You haven't added any addresses yet.</p>
                                <button class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                                    <i class="fas fa-plus me-2"></i> Add New Address
                                </button>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    
     <!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addressForm" action="/profile/addresses" method="POST">              

                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Address Type</label>
                        <select name="type" class="form-select">
                            <option value="Home">Home</option>
                            <option value="Work">Work</option>
                            <option value="Other">Other</option>
                        </select>
                        <small class="error-message"></small>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Full Name</label>
                            <input type="text" class="form-control" name="name" required>
                            <small class="error-message"></small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" name="phone" required>
                            <small class="error-message"></small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">House Name</label>
                        <input type="text" class="form-control" name="hName">
                        <small class="error-message"></small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Street Address</label>
                        <input type="text" class="form-control" name="street" required>
                        <small class="error-message"></small>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label">City</label>
                            <input type="text" class="form-control" name="city" required>
                            <small class="error-message"></small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">State</label>
                            <input type="text" class="form-control" name="state" required>
                            <small class="error-message"></small>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">ZIP Code</label>
                            <input type="text" class="form-control" name="zip" required>
                            <small class="error-message"></small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Country</label>
                        <input type="text" class="form-control" name="country" required>
                        <small class="error-message"></small>
                    </div>

                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="makeDefault" name="makeDefault">
                        <label class="form-check-label" for="makeDefault">
                            Set as default address
                        </label>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Address</button>
                </div>
            </form>
        </div>
    </div>
</div>      

    <%- include('./userPartials/footer') %> 
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Form validation setup
            function setupFormValidation(formId, modalId) {
                const form = document.getElementById(formId);
                const modal = document.getElementById(modalId);
                if (!form || !modal) return; // If form or modal not found, exit

                const fields = form.querySelectorAll("input, select");

                // Clear error messages & inputs when the modal opens
                modal.addEventListener('show.bs.modal', function () {
                    form.querySelectorAll('.error-message').forEach(error => {
                        error.textContent = "";
                    });

                    // Clear input fields only for the Add Address form
                    if (formId === "addressForm") {
                        form.querySelectorAll("input").forEach(input => {
                            if (input.type !== "checkbox") {
                                input.value = "";
                            }
                        });
                    }
                });

                // Attach validation on input change
                fields.forEach(field => {
                    field.addEventListener("input", () => validateField(field));
                });

                // Form submit validation
                form.addEventListener("submit", function (event) {
                    let isValid = true;
                    fields.forEach(field => {
                        if (!validateField(field)) {
                            isValid = false;
                        }
                    });

                    if (!isValid) {
                        event.preventDefault();
                    }
                });
            }

            function validateField(field) {
                if (field.type === "checkbox") return true;
                
                const errorMessage = field.nextElementSibling;
                const value = field.value.trim();

                if (!errorMessage || !errorMessage.classList.contains('error-message')) return true;

                errorMessage.textContent = ""; // Clear previous errors

                // Required field validation
                if (field.hasAttribute('required') && !value) {
                    errorMessage.textContent = `This field is required.`;
                    return false;
                }

                // ZIP Code validation (6 digits)
                if (field.name === "zip" && value && !/^\d{6}$/.test(value)) {
                    errorMessage.textContent = "ZIP Code must be 6 digits.";
                    return false;
                }

                // Phone number validation (10 digits)
                if (field.name === "phone" && value && !/^\d{10}$/.test(value)) {
                    errorMessage.textContent = "Phone number must be 10 digits.";
                    return false;
                }

                return true; // Field is valid
            }

            // Setup validation for Address form
            setupFormValidation("addressForm", "addAddressModal");
            
            // Delete address handling
            document.querySelectorAll('.deleteAddress').forEach(button => {
                button.addEventListener('click', function() {
                    const addressId = this.getAttribute('data-id');
                    
                    Swal.fire({
                        title: "Are you sure?",
                        text: "This action will permanently delete the address.",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#EF4444",
                        cancelButtonColor: "#6B7280",
                        confirmButtonText: "Yes, delete it!"
                    }).then(async (result) => {
                        if (result.isConfirmed) {
                            try {
                                const response = await fetch(`/profile/addresses/${addressId}`, {
                                    method: "DELETE",
                                    headers: { "Content-Type": "application/json" }
                                });

                                const data = await response.json();

                                if (data.success) {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Deleted!",
                                        text: data.message || "Your address has been deleted successfully.",
                                        confirmButtonColor: "#6366F1"
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Error!",
                                        text: data.message || "Failed to delete the address.",
                                        confirmButtonColor: "#6366F1"
                                    });
                                }
                            } catch (error) {
                                console.error("Error deleting address:", error);
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops!",
                                    text: "Something went wrong!",
                                    confirmButtonColor: "#6366F1"
                                });
                            }
                        }
                    });
                });
            });
            
            // Set as default address handling
            document.querySelectorAll('.defaultAddress').forEach(button => {
                button.addEventListener('click', function() {
                    const addressId = this.getAttribute('data-id');
                    
                    Swal.fire({
                        title: "Set as Default?",
                        text: "This address will be used as your default shipping address.",
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: "#6366F1",
                        cancelButtonColor: "#6B7280",
                        confirmButtonText: "Yes, set as default"
                    }).then(async (result) => {
                        if (result.isConfirmed) {
                            try {
                                const response = await fetch(`/profile/addresses/${addressId}`, {
                                    method: "PATCH",
                                    headers: { "Content-Type": "application/json" }
                                });

                                const data = await response.json();

                                if (data.success) {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Default Address Set!",
                                        text: data.message || "Your default address has been updated.",
                                        confirmButtonColor: "#6366F1"
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Error!",
                                        text: data.message || "Failed to update default address.",
                                        confirmButtonColor: "#6366F1"
                                    });
                                }
                            } catch (error) {
                                console.error("Error setting default address:", error);
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops!",
                                    text: "Something went wrong!",
                                    confirmButtonColor: "#6366F1"
                                });
                            }
                        }
                    });
                });
            });
        });
    </script>
</body>
</html>