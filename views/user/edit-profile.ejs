<!DOCTYPE HTML>
<html>
<head>
    <title>CRUX | Edit Profile</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/front/css/style.css">
    <style>
        /* Add the new CSS styles here */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f9fa;
        }
        
        .profile-container {
            padding-top: 2rem;
            padding-bottom: 4rem;
        }
        
        /* Sidebar Styling */
        .profile-sidebar {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            height: 100%;
        }
        
        .profile-header {
            background: linear-gradient(135deg, #6366F1 0%, #8B5CF6 100%);
            padding: 2rem 1.5rem;
            color: white;
            text-align: center;
        }
        
        .profile-image {
            position: relative;
            display: inline-block;
        }
        
        .profile-image img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            border: 4px solid rgba(255, 255, 255, 0.2);
            object-fit: cover;
        }
        
        .profile-image .edit-avatar {
            position: absolute;
            bottom: 0;
            right: 0;
            background: white;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6366F1;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .profile-image .edit-avatar:hover {
            background: #f0f0f0;
        }
        
        .nav-menu {
            padding: 1rem 0;
        }
        
        .nav-menu .nav-item {
            padding: 0;
        }
        
        .nav-menu .nav-link {
            padding: 0.75rem 1.5rem;
            color: #4B5563;
            display: flex;
            align-items: center;
            transition: all 0.2s;
            border-left: 3px solid transparent;
        }
        
        .nav-menu .nav-link i {
            margin-right: 12px;
            font-size: 1.2rem;
            width: 24px;
            text-align: center;
        }
        
        .nav-menu .nav-link:hover {
            background-color: #F3F4F6;
            color: #6366F1;
        }
        
        .nav-menu .nav-link.active {
            background-color: #F3F4F6;
            color: #6366F1;
            border-left: 3px solid #6366F1;
            font-weight: 500;
        }
        
        /* Content Cards */
        .content-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .content-card h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: #111827;
            margin-bottom: 1.5rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid #E5E7EB;
        }
        
        /* Form Styling */
        .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid #D1D5DB;
        }
        
        .form-control:focus {
            border-color: #6366F1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.15);
        }
        
        .btn-primary {
            background-color: #6366F1;
            border-color: #6366F1;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .btn-primary:hover {
            background-color: #4F46E5;
            border-color: #4F46E5;
        }
        
        .btn-secondary {
            background-color: #9CA3AF;
            border-color: #9CA3AF;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .btn-secondary:hover {
            background-color: #6B7280;
            border-color: #6B7280;
        }
        
        .avatar-upload {
            position: relative;
            max-width: 200px;
            margin: 0 auto 2rem;
        }
        
        .avatar-upload .avatar-edit {
            position: absolute;
            right: 0;
            z-index: 1;
            top: 0;
        }
        
        .avatar-upload .avatar-edit input {
            display: none;
        }
        
        .avatar-upload .avatar-edit label {
            display: inline-block;
            width: 34px;
            height: 34px;
            margin-bottom: 0;
            border-radius: 100%;
            background: #6366F1;
            border: 1px solid transparent;
            box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.12);
            cursor: pointer;
            font-weight: normal;
            transition: all .2s ease-in-out;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }
        
        .avatar-upload .avatar-edit label:hover {
            background: #4F46E5;
        }
        
        .avatar-upload .avatar-preview {
            width: 150px;
            height: 150px;
            position: relative;
            border-radius: 100%;
            border: 6px solid #F3F4F6;
            box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);
            margin: 0 auto;
        }
        
        .avatar-upload .avatar-preview > div {
            width: 100%;
            height: 100%;
            border-radius: 100%;
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .profile-sidebar {
                margin-bottom: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <%- include('./userPartials/header') %> 

    <div class="container profile-container">
        <% if (messages.success) { %>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i> <%= messages.success %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>
        
        <% if (messages.error) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i> <%= messages.error %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>

        <div class="row">
            <!-- Sidebar -->
            <div class="col-lg-3 col-md-4">
                <div class="profile-sidebar">
                    <div class="profile-header">
                        <div class="profile-image">
                            <img src="<%= user.image %>" alt="<%= user.fullName %>" class="img-fluid">
                        </div>
                        <h4 class="mt-3 mb-1"><%= user.fullName %></h4>
                        <p class="mb-0"><%= user.email %></p>
                    </div>
                    
                    <ul class="nav flex-column nav-menu">
                        <li class="nav-item">
                            <a class="nav-link active" href="/profile">
                                <i class="fas fa-user"></i> Account Overview
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/my-orders">
                                <i class="fas fa-shopping-bag"></i> My Orders
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/addresses">
                                <i class="fas fa-map-marker-alt"></i> Manage Addresses
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/wallet">
                                <i class="fas fa-wallet"></i> Wallet
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/coupons">
                                <i class="fas fa-ticket-alt"></i> Coupons
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/profile/wishlist">
                                <i class="fas fa-heart"></i> Wishlist
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-danger" href="/logout">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            
            <!-- Profile Content -->
            <div class="col-lg-9 col-md-8">
                <div class="content-card">
                    <h2>
                        <i class="fas fa-user-edit me-2"></i>
                        Edit Profile
                    </h2>
                    
                    <form id="editProfileForm" enctype="multipart/form-data">
                        <div class="avatar-upload">
                            <div class="avatar-edit">
                                <input type="file" id="imageUpload" name="profileImage" accept=".png, .jpg, .jpeg,.avif" />
                                <label for="imageUpload"><i class="fas fa-pencil-alt"></i></label>
                            </div>
                            <div class="avatar-preview">
                                <div id="imagePreview" style="background-image: url('<%= user.image %>');">
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="fullName" class="form-label">Full Name</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    <input type="text" class="form-control" id="fullName" name="fullName" value="<%= user.fullName %>" >
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="mobile" class="form-label">Phone Number</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                    <input type="tel" class="form-control" id="mobile" name="mobile" value="<%= user.mobile %>"     >
                                </div>
                            </div> 
                        </div>
                        <div class="row">                          
                            
                            <div class="col-md-6 mb-3">
                                <label for="dateOfBirth" class="form-label">Date of Birth</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                                    <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth" value="<%= user.dateOfBirth ? new Date(user.dateOfBirth).toISOString().split('T')[0] : '' %>">
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label d-block">Gender</label>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="gender" id="male" value="male" <%= user.gender === 'male' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="male">Male</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="gender" id="female" value="female" <%= user.gender === 'female' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="female">Female</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="gender" id="other" value="other" <%= user.gender === 'other' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="other">Other</label>
                                </div>
                            </div>
                        </div>                    
                                               
                        <div class="d-flex gap-2 mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i> Save Changes
                            </button>
                            <a href="/profile" class="btn btn-secondary">
                                <i class="fas fa-times me-2"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>

                <!-- Email Verification Card -->
                <div class="content-card mt-4">
                    <h2>
                        <i class="fas fa-envelope me-2"></i>
                        Email Verification
                    </h2>
                    
                    <div class="mb-3">
                        <label for="emailVerification" class="form-label">Email Address</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                            <input type="email" class="form-control" id="emailVerification" name="emailVerification" value="<%= user.email %>" <%= user.googleId ? 'readonly' : '' %>>
                        </div>
                        <% if(user.googleId) { %>
                            <small class="text-muted">Email cannot be changed for Google accounts</small>
                        <% } %>
                    </div>
                    
                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-outline-primary" id="sendOtp">
                            <i class="fas fa-paper-plane me-2"></i> Send OTP
                        </button>
                        <div id="otpSection" style="display: none;">
                            <input type="text" class="form-control mb-2" id="otpInput" placeholder="Enter OTP">
                            <button type="button" class="btn btn-danger" id="verifyOtp">
                                <i class="fas fa-check-circle me-2"></i> Verify OTP
                            </button>
                            <button type="button" class="btn btn-secondary" id="resendOtp" disabled>
                                <i class="fas fa-sync-alt me-2"></i> Resend OTP
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('./userPartials/footer') %> 
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
     
        // Email Verification Logic
        let resendOtpButton = document.getElementById('resendOtp');
        let sendOtpButton = document.getElementById('sendOtp');
        let verifyOtpButton = document.getElementById('verifyOtp');
        let otpInput = document.getElementById('otpInput');
        let otpSection = document.getElementById('otpSection');

        function startOtpTimer(duration) {
            let endTime = Date.now() + duration * 1000;
            localStorage.setItem("otpExpiryTime", endTime); // Store expiry time

            function updateTimer() {
                let remainingTime = Math.floor((endTime - Date.now()) / 1000);

                if (remainingTime > 0) {
                    resendOtpButton.innerText = `Resend OTP (${remainingTime}s)`;
                    resendOtpButton.disabled = true;
                    setTimeout(updateTimer, 1000);
                } else {
                    resendOtpButton.innerText = "Resend OTP";
                    resendOtpButton.disabled = false;
                    localStorage.removeItem("otpExpiryTime"); // Clear stored time
                }
            }
            updateTimer();
        }

        // Send OTP
        sendOtpButton.addEventListener('click', async function () {
            const email = document.getElementById('emailVerification').value;

            if (!email) {
                Swal.fire({
                    title: "Error",
                    text: "Please enter a valid email address.",
                    icon: "error",
                });
                return;
            }

            sendOtpButton.disabled = true; // Disable Send OTP button
            sendOtpButton.innerHTML = `<i class="fas fa-spinner fa-spin me-2"></i> Sending OTP...`;

            try {
                const response = await fetch('/profile/email-verify', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email }),
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: "OTP Sent!",
                        text: "Check your email for the OTP.",
                        icon: "success",
                    });

                    otpSection.style.display = "block"; // Show OTP section
                    startOtpTimer(60); // Start 60-second timer
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.message || "Failed to send OTP. Please try again.",
                        icon: "error",
                    });
                    sendOtpButton.disabled = false; // Re-enable Send OTP button on error
                }
            } catch (error) {
                console.error("Error sending OTP:", error);
                Swal.fire({
                    title: "Error",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                });
                sendOtpButton.disabled = false; // Re-enable Send OTP button on error
            } finally {
                sendOtpButton.innerHTML = `<i class="fas fa-paper-plane me-2"></i> Send OTP`;
            }
        });

        // Verify OTP
        verifyOtpButton.addEventListener('click', async function () {
            const email = document.getElementById('emailVerification').value;
            const otp = otpInput.value;

            if (!otp) {
                Swal.fire({
                    title: "Error",
                    text: "Please enter the OTP.",
                    icon: "error",
                });
                return;
            }

            verifyOtpButton.disabled = true;
            verifyOtpButton.innerHTML = `<i class="fas fa-spinner fa-spin me-2"></i> Verifying...`;

            try {
                const response = await fetch('/profile/verify-otp', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email, otp }),
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: "Verified!",
                        text: data.message || "Your email has been verified successfully.",
                        icon: "success",
                    }).then(() => {
                        // Hide OTP section and reset UI
                        otpSection.style.display = "none";
                        otpInput.value = ""; // Clear OTP input
                        sendOtpButton.disabled = false; // Re-enable Send OTP button
                        verifyOtpButton.disabled = false; // Re-enable Verify OTP button
                        verifyOtpButton.innerHTML = `<i class="fas fa-check-circle me-2"></i> Verify OTP`;
                        resendOtpButton.disabled = false; // Re-enable Resend OTP button
                    });
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.message || "Invalid OTP. Please try again.",
                        icon: "error",
                    });
                    verifyOtpButton.disabled = false; // Re-enable Verify OTP button on error
                }
            } catch (error) {
                console.error("Error verifying OTP:", error);
                Swal.fire({
                    title: "Error",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                });
                verifyOtpButton.disabled = false; // Re-enable Verify OTP button on error
            } finally {
                verifyOtpButton.innerHTML = `<i class="fas fa-check-circle me-2"></i> Verify OTP`;
            }
        });

        // Resend OTP
        resendOtpButton.addEventListener('click', async function () {
            const email = document.getElementById('emailVerification').value;

            if (!email) {
                Swal.fire({
                    title: "Error",
                    text: "Please enter a valid email address.",
                    icon: "error",
                });
                return;
            }

            resendOtpButton.disabled = true;
            resendOtpButton.innerHTML = `<i class="fas fa-spinner fa-spin me-2"></i> Resending OTP...`;

            try {
                const response = await fetch('/profile/email-verify', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email }),
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: "OTP Sent!",
                        text: "Check your email for the new OTP.",
                        icon: "success",
                    });

                    startOtpTimer(60); // Restart 60-second timer
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.message || "Failed to resend OTP. Please try again.",
                        icon: "error",
                    });
                    resendOtpButton.disabled = false; // Re-enable Resend OTP button on error
                }
            } catch (error) {
                console.error("Error resending OTP:", error);
                Swal.fire({
                    title: "Error",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                });
                resendOtpButton.disabled = false; // Re-enable Resend OTP button on error
            } finally {
                resendOtpButton.innerHTML = `<i class="fas fa-sync-alt me-2"></i> Resend OTP`;
            }
        });

        // Restore timer on page refresh
        window.onload = function () {
            const storedExpiryTime = localStorage.getItem("otpExpiryTime");
            if (storedExpiryTime) {
                const remainingTime = Math.floor((storedExpiryTime - Date.now()) / 1000);
                if (remainingTime > 0) {
                    otpSection.style.display = "block"; // Show OTP section
                    startOtpTimer(remainingTime); // Restart timer
                } else {
                    localStorage.removeItem("otpExpiryTime"); // Clear expired timer
                }
            }
        };

        document.getElementById("editProfileForm").addEventListener("submit", async function(event) {
        event.preventDefault();
        
        let isValid = true;

        const fullName = document.getElementById("fullName");
        const phone = document.getElementById("mobile");
        const dob = document.getElementById("dateOfBirth");
        const genderRadios = document.getElementsByName("gender");
        const formData = new FormData(this);

        // Reset previous errors
        document.querySelectorAll(".error-message").forEach(el => el.remove());

        function showError(input, message) {
            const error = document.createElement("small");
            error.className = "error-message text-danger";
            error.innerText = message;
            input.parentNode.appendChild(error);
            isValid = false;
        }

        if (!fullName.value.trim()) showError(fullName, "Full Name is required");
        if (!/^\d{10}$/.test(phone.value)) showError(phone, "Phone number must be 10 digits");
        if (!dob.value) showError(dob, "Date of Birth is required");

        let genderSelected = false;
        for (let radio of genderRadios) {
            if (radio.checked) {
                genderSelected = true;
                break;
            }
        }
        if (!genderSelected) showError(genderRadios[0].parentNode, "Please select a gender");

        if (!isValid) return;

        // Send AJAX request with PUT method
        try {
            const response = await fetch("/profile/edit", {
                method: "PUT",
                body: formData
            });

            const result = await response.json();
            if (result.success) {
                Swal.fire({
                        title: "Profile Updated",
                        text: result.message,
                        icon: "success",
                    }).then(()=>location.reload());                
            } else {
                Swal.fire({
                        title: "Error",
                        text: result.message,
                        icon: "error",
                    });
            }
        } catch (error) {
            console.error(error);
            Swal.fire({
                        title: "Error",
                        text: result.message,
                        icon: "error",
                    });
        }
    });

    
    
    </script>
        </body>
        </html>